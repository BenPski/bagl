List a = Cons a (List a) | Nil;
Bool = True | False;
Pair a b = Pair a b;


fst x = case x {Pair a b -> a};
snd x = case x {Pair a b -> b};

head x = case x {Cons a as -> a; _ -> error "empty list"};


manip x = let a = add_int x 1 in case a {1 -> "was zero"; _ -> "something"};

test x = case x {1 -> add_int x 1; _ -> 0};

testpair x y = case (Pair x y) {Pair a b -> y};

multicase x = case x {Cons a as -> case a {1 -> "bal"; _ -> "woo"}; Nil -> "peen"};

casecond x = case (case x {1 -> True; _ -> False}) {True -> "one"; _ -> "other"};

main = casecond 1